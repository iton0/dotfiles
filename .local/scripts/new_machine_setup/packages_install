#!/usr/bin/env bash
if [ "$(cat /sys/class/dmi/id/sys_vendor)" == "System76" ]; then
	sudo dnf copr enable szydell/system76 -y
	sudo dnf install -y kernel-devel system76-driver
	sudo dnf install -y "system76*" firmware-manager
	sudo systemctl enable --now system76-firmware-daemon
	sudo systemctl mask power-profiles-daemon.service
	sudo gpasswd -a $USER adm
	sudo systemctl enable com.system76.PowerDaemon.service system76-power-wake
	sudo systemctl start com.system76.PowerDaemon.service
	sudo systemctl enable dkms
fi
sudo dnf copr enable pgdev/ghostty -y
PACKAGE_FILE="$HOME/.local/scripts/new_machine_setup/packages.txt"
if [[ ! -f "$PACKAGE_FILE" ]]; then
  echo "Error: Package list file '$PACKAGE_FILE' not found."
else
  echo "Reading package list from $PACKAGE_FILE..."
fi
mapfile -t BASE_PACKAGES < <(grep -vE '^\s*#|^\s*$' "$PACKAGE_FILE")
if [[ ${#BASE_PACKAGES[@]} -eq 0 ]]; then
  echo "No packages found in $PACKAGE_FILE. Nothing to install."
fi
sudo dnf install -y "${BASE_PACKAGES[@]}"
echo "Upgrading packages..."
sudo dnf upgrade -y
gsettings set org.gnome.desktop.interface font-name "Cantarell 18"
gsettings set org.gnome.desktop.interface cursor-size 32
export PATH="$PATH:/var/lib/flatpak/exports/bin"
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak install --noninteractive flathub one.ablaze.floorp
if command -v fd >/dev/null; then
	mkdir -p "$HOME/.local/bin"
	ln -s "$(command -v fd)" "$HOME/.local/bin/fd"
else
	echo "fd is not installed, skipping symlink creation."
fi
echo 'theme = light:"Builtin Solarized Light",dark:"Builtin Solarized Dark"' >> "$HOME/.config/ghostty/config"
curl -sSL https://raw.githubusercontent.com/iton0/hkup-cli/main/scripts/install | sh
echo "Installing Latest Go Version..."
LATEST_GO_VERSION=$(curl -s https://go.dev/dl/ | grep -oP 'go\d+\.\d+\.\d+\.linux-amd64\.tar\.gz' | head -n 1)
LATEST_GO_VERSION_URL="https://go.dev/dl/$LATEST_GO_VERSION"
curl -LO "$LATEST_GO_VERSION_URL"
sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf "$LATEST_GO_VERSION"
rm "$LATEST_GO_VERSION"
echo "Go has been installed successfully."
echo "Installing nvm..."
LATEST_NVM_VERSION=$(curl -s https://api.github.com/repos/nvm-sh/nvm/releases/latest | grep -oP '"tag_name": "\Kv\d+\.\d+\.\d+' )
INSTALL_SCRIPT_URL="https://raw.githubusercontent.com/nvm-sh/nvm/$LATEST_NVM_VERSION/install.sh"
curl -o- "$INSTALL_SCRIPT_URL" | bash
git clone --depth 1 --filter=blob:none https://github.com/ErikReider/SwayAudioIdleInhibit.git
cd SwayAudioIdleInhibit
meson build
ninja -C build
sudo meson install -C build
cd "$HOME"
rm -rf SwayAudioIdleInhibit
echo "Installing oh-my-zsh..."
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended --keep-zshrc
echo "Cloning Zsh plugins..."
git clone --depth 1 --filter=blob:none https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
echo "Zsh configured successfully."
curl -sS https://starship.rs/install.sh | sh -s -- -y
