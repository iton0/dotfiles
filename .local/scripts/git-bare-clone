#!/usr/bin/env bash
set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT
usage() {
    cat << EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] [-l location] repository [foldername]
Clone a bare git repo and set up environment for working comfortably and exclusively from worktrees.
Positional arguments:
  repository     URL of the repository to clone
  foldername     Name of the folder where the repository will be cloned (optional)
Options:
  -h, --help      Print this help and exit
  -v, --verbose   Print script debug info
  -l, --location  Location of the bare repo contents (if not provided, defaults to foldername)
EOF
    exit
}
cleanup() {
    trap - SIGINT SIGTERM ERR EXIT
}
setup_colors() {
    if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
        NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
    else
        NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
    fi
}
msg() {
    echo >&2 -e "${1-}"
}
die() {
    local msg=$1
    local code=${2-1} # default exit status 1
    msg "$msg"
    exit "$code"
}
parse_params() {
    while :; do
        case "${1-}" in
            -h | --help) usage ;;
            -v | --verbose) set -x ;;
            --no-color) NO_COLOR=1 ;;
            -l | --location)
                location="${2-}"
                shift
                ;;
            -?*) die "Unknown option: $1" ;;
            *) break ;;
        esac
        shift
    done
    if [[ $# -lt 1 || $# -gt 2 ]]; then
        die "Invalid number of arguments: expected repository URL and optionally folder name"
    fi
    repository="${1}"
    foldername="${2:-$(basename "${repository}")}"
    location="${location:-$foldername}"
    return 0
}
parse_params "$@"
setup_colors
msg "${YELLOW}Cloning bare repository from ${repository} to ${foldername}...${NOFORMAT}"
git clone --bare --filter=blob:none "${repository}" "${foldername}"
pushd "${foldername}" > /dev/null
msg "${YELLOW}Adjusting origin fetch locations...${NOFORMAT}"
git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
popd > /dev/null
cd "${foldername}"
git fetch
msg "${GREEN}Success.${NOFORMAT}"
